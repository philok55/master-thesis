Fact citizen
Fact address
Fact notary
Fact value Identified by Int
Fact property Identified by address * value
Fact mortgage Identified by
  property * citizen * value
Fact ownership Identified by property * citizen
Fact nim-covered Identified by mortgage

Fact property-amount Identified by Int
Fact ownership-count
  Identified by citizen * property-amount
    Derived from
      ownership-count(citizen, Count(Foreach property: property When ownership(property, citizen)))

Fact property-count
  Identified by Int
    Derived from 
      Count(Foreach property: property When property)

Fact mean-value
  Identified by Int
    Conditioned by
      property-count > 0
    Derived from
      (Sum(Foreach property: property.value When property) / property-count)

// Nim coverage allowed for an existing mortgage
Fact nim-coverage-allowed
  Identified by mortgage
    Holds when
      !nim-covered(mortgage) &&
      mortgage.value < mean-value &&
      (Exists ownership-count: ownership-count.citizen == mortgage.citizen && ownership-count.property-amount == 1)

// Create mortgage without coverage
Act create-mortgage
  Actor notary
  Recipient citizen
  Related to property, value
  Creates mortgage(), ownership(property, citizen)
  Holds when True

// Create mortgage with NIM coverage
Act create-covered-mortgage
  Actor notary
  Recipient citizen
  Related to property, value
  Creates nim-covered(mortgage()), ownership(property, citizen)
  Holds when
    value < mean-value &&
    (Exists ownership-count: ownership-count.citizen == citizen && ownership-count.property-amount == 0)

// Add coverage to existing mortgage
Act add-nim-coverage
  Actor notary
  Recipient mortgage
  Creates nim-covered(mortgage)
  Holds when
    nim-coverage-allowed(mortgage)